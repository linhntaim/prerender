{"version":3,"sources":["../../../src/classes/prerender_io_server.js"],"names":["PrerenderIoServer","server","loadConfigurations","loadPlugins","forEach","plugin","use","prerender","start","env","config","port","chromeLocation","chromeFlags","logRequests","pageDoneCheckInterval","pageLoadTimeout","waitAfterLastRequest","followRedirects","key","hasOwnProperty","RenderServer"],"mappings":"gGAAA,2CACA,4DACA,sE,i+DAEqBA,CAAAA,iB,iFACjB,4BAAc,8HAGb,C,mEAEO,gBACJ,KAAKC,MAAL,CAAc,0BAAU,KAAKC,kBAAL,EAAV,CAAd,CACA,KAAKC,WAAL,GAAmBC,OAAnB,CAA2B,SAAAC,MAAM,CAAI,CACjC,KAAI,CAACJ,MAAL,CAAYK,GAAZ,CAAgBC,sBAAUF,MAAV,GAAhB,CACH,CAFD,EAGA,KAAKJ,MAAL,CAAYO,KAAZ,GACA,MAAO,KACV,C,+DAEoB,CACjB,GAAMC,CAAAA,GAAG,CAAG,0BAAZ,CACA,GAAMC,CAAAA,MAAM,CAAG,CACXC,IAAI,CAAE,MADK,CAGXC,cAAc,CAAE,iBAHL,CAIXC,WAAW,CAAE,cAJF,CAMXC,WAAW,CAAE,cANF,CAOXC,qBAAqB,CAAE,0BAPZ,CAQXC,eAAe,CAAE,mBARN,CASXC,oBAAoB,CAAE,yBATX,CAUXC,eAAe,CAAE,kBAVN,CAAf,CAYA,IAAK,GAAMC,CAAAA,GAAX,GAAkBT,CAAAA,MAAlB,CAA0B,CACtB,GAAID,GAAG,CAACW,cAAJ,CAAmBV,MAAM,CAACS,GAAD,CAAzB,CAAJ,CAAqC,CACjCT,MAAM,CAACS,GAAD,CAAN,CAAcV,GAAG,CAACC,MAAM,CAACS,GAAD,CAAP,CACpB,CAFD,IAEO,OAAOT,CAAAA,MAAM,CAACS,GAAD,CACvB,CACD,MAAOT,CAAAA,MACV,C,iDAEa,CACV,GAAMD,CAAAA,GAAG,CAAG,0BAAZ,CACA,MAAOA,CAAAA,GAAG,CAACW,cAAJ,CAAmB,aAAnB,EAAoCX,GAAG,CAAC,aAAD,CAAvC,CAAyD,EACnE,C,8BAxC0CY,yB","sourcesContent":["import {getenv} from 'dotenv-packed'\r\nimport prerender from 'prerender'\r\nimport RenderServer from './render_server'\r\n\r\nexport default class PrerenderIoServer extends RenderServer {\r\n    constructor() {\r\n        super()\r\n\r\n    }\r\n\r\n    start() {\r\n        this.server = prerender(this.loadConfigurations())\r\n        this.loadPlugins().forEach(plugin => {\r\n            this.server.use(prerender[plugin]())\r\n        })\r\n        this.server.start()\r\n        return true\r\n    }\r\n\r\n    loadConfigurations() {\r\n        const env = getenv()\r\n        const config = {\r\n            port: 'PORT',\r\n\r\n            chromeLocation: 'CHROME_LOCATION',\r\n            chromeFlags: 'CHROME_FLAGS',\r\n\r\n            logRequests: 'LOG_REQUESTS',\r\n            pageDoneCheckInterval: 'PAGE_DONE_CHECK_INTERVAL',\r\n            pageLoadTimeout: 'PAGE_LOAD_TIMEOUT',\r\n            waitAfterLastRequest: 'WAIT_AFTER_LAST_REQUEST',\r\n            followRedirects: 'FOLLOW_REDIRECTS',\r\n        }\r\n        for (const key in config) {\r\n            if (env.hasOwnProperty(config[key])) {\r\n                config[key] = env[config[key]]\r\n            } else delete config[key]\r\n        }\r\n        return config\r\n    }\r\n\r\n    loadPlugins() {\r\n        const env = getenv()\r\n        return env.hasOwnProperty('USE_PLUGINS') ? env['USE_PLUGINS'] : []\r\n    }\r\n}"],"file":"prerender_io_server.js"}